apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ .Values.service.api.name}}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.service.api.name }}
    chart: {{ include "api.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.service.api.name }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.api.name }}
        release: {{ .Release.Name }}
      annotations:
        prometheus.io/port: "{{ .Values.service.api.internalPort }}"
        prometheus.io/scrape: "true"
    spec:
      containers:
        - name: {{ .Values.service.api.name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: {{ .Values.service.api.name }}
              containerPort: {{ .Values.service.api.internalPort }}
              protocol: TCP
          env:
            - name: RELEASE_TRIGGER
              value: "{{ .Values.releaseTimeStamp }}"
            - name: DEBUG
              value: "{{ .Values.service.api.debug }}"
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.apiSecrets }}
                  key: djangoSecretKey
            - name: DB_HOST
              value: "{{ .Values.databaseHost }}"
            - name: CFSSL_SERVER
              value: "{{ .Values.caHost }}"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.apiSecrets }}
                  key: databasePassword
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.apiSecrets }}
                  key: sentryDsn
            - name: MIXPANEL_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.apiSecrets }}
                  key: mixpanelToken
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.service.api.internalPort }}
          readinessProbe:
            httpGet:
              path: /readiness
              port: {{ .Values.service.api.internalPort }}
            initialDelaySeconds: 20
            timeoutSeconds: 5
          resources:
{{ toYaml .Values.resources.api | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
