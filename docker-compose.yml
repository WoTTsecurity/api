version: '3'
services:
  python-base:
    command: bash -c "exit 0"
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings.dev
    build:
      context: .
      dockerfile: Dockerfile-python-base
    image: python-base:latest
    volumes:
      - ./backend:/usr/src/app

  migrate:
    command: python3 manage.py migrate --noinput
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings.dev
      - DB_PASSWORD=SuperSecurePassword
      - DB_USER=postgres
    build:
      context: .
    volumes:
      - ./backend:/usr/src/app
    depends_on:
      - python-base
      - psql
      - wott-static

  dash-dev:
    hostname: dash-dev0
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings.dev
      - DB_PASSWORD=SuperSecurePassword
      - DB_USER=postgres
      - DATASTORE_KEY_JSON
    build:
      context: .
      args:
        - CIRCLE_SHA1
    image: wott-api:latest
    volumes:
      - ./backend:/usr/src/app
    ports:
      - '8000:8000'
    depends_on:
      - psql
      - migrate
      - wott-static

  api-dev:
    hostname: api-dev0
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings.dev
      - DB_PASSWORD=SuperSecurePassword
      - DB_USER=postgres
      - DATASTORE_KEY_JSON
    build:
      context: .
    volumes:
      - ./backend:/usr/src/app
    ports:
      - '8001:8000'
    depends_on:
      - psql
      - migrate
      - python-base

  mtls-api-dev:
    hostname: mtls-api-dev0
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings.dev
      - DB_PASSWORD=SuperSecurePassword
      - DB_USER=postgres
      - DATASTORE_KEY_JSON
    build:
      context: .
    volumes:
      - ./backend:/usr/src/app
    ports:
      - '8002:8000'
    depends_on:
      - psql
      - migrate
      - python-base

  wott-static:
    hostname: wott-static
    build:
      context: .
      dockerfile: Dockerfile-nginx
      args:
        DJANGO_SETTINGS_MODULE: backend.settings.dev
    image: wott-static:latest
    ports:
      - '8003:80'
    depends_on:
      - python-base

  psql:
    environment:
      - POSTGRES_DB=wott-backend
      - POSTGRES_PASSWORD=SuperSecurePassword
    image: postgres:alpine
    volumes:
      - db-data:/var/lib/postgresql/data

  redis:
    image: redis:5.0-alpine
    command: redis-server

  celery:
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings.dev
      - DB_PASSWORD=SuperSecurePassword
      - DB_USER=postgres
    build:
      context: .
    command: celery worker -A backend -O fair -l error --concurrency=4 --time-limit=65 --soft-time-limit=60 --pidfile="/tmp/celery.pid"
    volumes:
      - ./backend:/usr/src/app
    depends_on:
      - psql
      - migrate
      - redis
      - python-base

  celery-beat:
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings.dev
      - DB_PASSWORD=SuperSecurePassword
      - DB_USER=postgres
    build:
      context: .
    command: celery beat -A backend -l error --pidfile="/tmp/celerybeat.pid" -s "/tmp/celerybeat-schedule"
    volumes:
      - ./backend:/usr/src/app
    depends_on:
      - psql
      - migrate
      - redis
      - python-base

volumes:
  db-data:

networks:
  default:
    external:
      name: wott
