# Generated by Django 2.1.10 on 2019-09-03 09:09

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
def copy_firewallstate_to_device(apps, schema_editor):
    """
    copy data from separate firewallstate objects to device objects
    """
    FirewallState = apps.get_model('device_registry', 'FirewallState')
    for firewallstate in FirewallState.objects.all():
        firewallstate.device.policy = firewallstate.policy
        firewallstate.device.rules = firewallstate.rules
        firewallstate.device.scan_date = firewallstate.scan_date
        firewallstate.device.save(update_fields=['policy', 'rules', 'scan_date'])


def copy_portscan_to_device(apps, schema_editor):
    """
    copy data from separate portscan objects to device objects
    """
    PortScan = apps.get_model('device_registry', 'PortScan')
    for portscan in PortScan.objects.all():
        portscan.device.scan_info = portscan.scan_info
        portscan.device.netstat = portscan.netstat
        portscan.device.block_ports = portscan.block_ports
        portscan.device.block_networks = portscan.block_networks
        portscan.device.save(update_fields=['scan_info', 'netstat', 'block_ports', 'block_networks'])


def copy_deviceinfo_to_device(apps, schema_editor):
    """
    copy data from separate firewallstate objects to device objects
    """
    DeviceInfo = apps.get_model('device_registry', 'DeviceInfo')
    for deviceinfo in DeviceInfo.objects.all():
        deviceinfo.device.device_manufacturer = deviceinfo.device_manufacturer
        deviceinfo.device.device_model = deviceinfo.device_model
        deviceinfo.device.device_architecture = deviceinfo.device_architecture
        deviceinfo.device.device_operating_system = deviceinfo.device_operating_system
        deviceinfo.device.device_operating_system_version = deviceinfo.device_operating_system_version
        deviceinfo.device.distr_id = deviceinfo.distr_id
        deviceinfo.device.distr_release = deviceinfo.distr_release
        deviceinfo.device.fqdn = deviceinfo.fqdn
        deviceinfo.device.ipv4_address = deviceinfo.ipv4_address
        deviceinfo.device.selinux_state = deviceinfo.selinux_state
        deviceinfo.device.app_armor_enabled = deviceinfo.app_armor_enabled
        deviceinfo.device.logins = deviceinfo.logins
        deviceinfo.device.default_password = deviceinfo.default_password
        deviceinfo.device.detected_mirai = deviceinfo.detected_mirai
        deviceinfo.device.device_metadata = deviceinfo.device_metadata
        deviceinfo.device.save(update_fields=['device_manufacturer', 'device_model', 'device_architecture',
                                              'device_operating_system', 'device_operating_system_version',
                                              'distr_id', 'distr_release', 'fqdn', 'ipv4_address', 'selinux_state',
                                              'app_armor_enabled', 'logins', 'default_password', 'detected_mirai',
                                              'device_metadata'])


class Migration(migrations.Migration):

    dependencies = [
        ('device_registry', '0053_auto_20190716_1247'),
    ]

    operations = [
        migrations.AddField(
            model_name='device',
            name='app_armor_enabled',
            field=models.BooleanField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='device',
            name='block_networks',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='device',
            name='block_ports',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='device',
            name='default_password',
            field=models.BooleanField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='device',
            name='detected_mirai',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AddField(
            model_name='device',
            name='device_architecture',
            field=models.CharField(blank=True, max_length=32, null=True),
        ),
        migrations.AddField(
            model_name='device',
            name='device_manufacturer',
            field=models.CharField(blank=True, max_length=128, null=True),
        ),
        migrations.AddField(
            model_name='device',
            name='device_metadata',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='device',
            name='device_model',
            field=models.CharField(blank=True, max_length=128, null=True),
        ),
        migrations.AddField(
            model_name='device',
            name='device_operating_system',
            field=models.CharField(blank=True, max_length=128, null=True),
        ),
        migrations.AddField(
            model_name='device',
            name='device_operating_system_version',
            field=models.CharField(blank=True, max_length=128, null=True),
        ),
        migrations.AddField(
            model_name='device',
            name='distr_id',
            field=models.CharField(blank=True, max_length=32, null=True),
        ),
        migrations.AddField(
            model_name='device',
            name='distr_release',
            field=models.CharField(blank=True, max_length=32, null=True),
        ),
        migrations.AddField(
            model_name='device',
            name='fqdn',
            field=models.CharField(blank=True, max_length=128, null=True),
        ),
        migrations.AddField(
            model_name='device',
            name='ipv4_address',
            field=models.GenericIPAddressField(blank=True, null=True, protocol='IPv4'),
        ),
        migrations.AddField(
            model_name='device',
            name='logins',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='device',
            name='netstat',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='device',
            name='policy',
            field=models.PositiveSmallIntegerField(choices=[(1, 'Allow by default'), (2, 'Block by default')], default=1),
        ),
        migrations.AddField(
            model_name='device',
            name='rules',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='device',
            name='scan_date',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='device',
            name='scan_info',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='device',
            name='selinux_state',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict),
        ),
        migrations.RunPython(copy_firewallstate_to_device),
        migrations.RunPython(copy_portscan_to_device),
        migrations.RunPython(copy_deviceinfo_to_device),
    ]
